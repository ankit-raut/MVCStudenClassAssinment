@model MVCStudenClassAssinment.Model.StudenParentViewModel

@{
    ViewBag.Title = "Edit";

    List<SelectListItem> selectListItems = new List<SelectListItem>();
    //foreach (var item in studenParentViewModel.StudentClassList)
    //    selectListItems.Add(new SelectListItem { Text = item.Name, Value = item.ClassId.ToString(), Selected = item.ClassId == studenParentViewModel.StudentClassId });

    Model.StudentClassList.ForEach(x => selectListItems.Add(new SelectListItem { Text = x.Name, Value = x.ClassId.ToString(), Selected = x.ClassId == Model.StudentClassId }));
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>SchoolClassViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.StudentId)

        <div class="form-group">
            @Html.LabelFor(model => model.StudentFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StudentFirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StudentFirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.StudentClass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.StudentClassId, new SelectList(Model.StudentClassList, "ClassId", "Name"), "Select Category", new { @class = "form-control" })*@
                @Html.DropDownListFor(model => model.StudentClassId, selectListItems, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StudentClassId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
